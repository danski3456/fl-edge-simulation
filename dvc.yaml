stages:
  download_data:
    cmd: python src/setup/download_dataset.py 
    deps:
      - src/datasets
      - src/setup/download_dataset.py
    outs:
      - assets/raw_datasets/${dataset_name}
    params:
      - dataset_name
  original_assignment:
    cmd: python src/setup/generate_assignment.py
    deps:
      - assets/raw_datasets/${dataset_name}
      - src/setup/generate_assignment.py
    outs:
      - assets/original_assignment/${dataset_name}/original_assignment.csv
    params:
      - dataset_name
      - timeslots
      - num_clients
      - arrival_rate
      - iid
      - optimal_data_sharing
  final_assignment:
    cmd: python src/policies/apply.py
    deps:
      - assets/original_assignment/${dataset_name}/
      - src/policies/
    outs:
      - assets/final_assignment/${dataset_name}/final_assignment.json
    params:
      - dataset_name
      - timeslots
      - num_clients
      - fl_rounds
      - cache_capacity
      - topology
      - resources
      - max_resources
  simulate:
    cmd: python src/simulations/federated_learning.py && python src/simulations/central_server.py
    deps:
      - assets/final_assignment/${dataset_name}/
      - src/simulations/
      - src/flower/
    outs:
      - assets/metrics/train
      - assets/models/

    params:
      - dataset_name
      - num_clients
      - fl_rounds
      - model_name
  report:
    cmd: python src/reports/data_distributions.py && python src/reports/training.py && python src/reports/confusion_matrix.py
    deps:
      - assets/metrics/train
      - src/reports
    outs:
      - assets/reports/images/${dataset_name}
    params:
      - dataset_name
      - num_clients
    metrics:
      - assets/metrics/test/central/metrics.json:
          cache: false
      - assets/metrics/test/federated/metrics.json:
          cache: false












